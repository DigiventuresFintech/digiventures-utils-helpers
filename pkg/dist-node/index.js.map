{"version":3,"file":"index.js","sources":["../dist-src/services/SecretManager.js","../dist-src/ConfigLoader.js"],"sourcesContent":["import { SecretsManager } from \"aws-sdk\";\nimport log4js from \"log4js\";\nexport default class SecretManager {\n    constructor() {\n        this.logger = log4js.getLogger(\"SecretManager\");\n        this.region = \"us-east-1\";\n        this.getSecret = async (secretArn) => {\n            return new Promise((resolve, reject) => {\n                this.secretsManager.getSecretValue({ SecretId: secretArn }, (err, data) => {\n                    if (err) {\n                        this.logger.error(err);\n                        reject(err);\n                        return;\n                    }\n                    let res;\n                    if (\"SecretString\" in data) {\n                        res = data.SecretString;\n                    }\n                    else {\n                        res = Buffer.from(data.SecretBinary, \"base64\").toString(\"ascii\");\n                    }\n                    try {\n                        resolve(JSON.parse(res));\n                    }\n                    catch (e) {\n                        this.logger.error(e);\n                        reject(e);\n                        return;\n                    }\n                });\n            });\n        };\n        this.secretsManager = new SecretsManager({\n            region: process.env.AWS_REGION || this.region,\n        });\n    }\n}\n","import SecretManager from \"./services/SecretManager\";\nimport log4js from \"log4js\";\nexport default class ConfigLoader {\n    constructor() {\n        this.logger = log4js.getLogger(\"ConfigLoader\");\n        this.references = {\n            production: \"prod\",\n            develop: \"dev\"\n        };\n        this.secrets = process.env.API_CONFIGURATION_SECRETS || \"\";\n        this.env = process.env.ENVIRONMENT;\n    }\n    /**\n     * SecretsLoader loads a list of secret manager by comma separated config, filtering by env\n     */\n    async secretsLoader() {\n        const ref = this.env ? this.references[this.env] : undefined;\n        const secretManager = new SecretManager();\n        if (ref) {\n            this.logger.trace(\"loading secrets for environment\", ref);\n            const pending = this.secrets\n                .split(\",\")\n                .filter((v) => v.includes(ref))\n                .map((v) => (v.endsWith(\",\") ? v.substring(0, v.length - 1) : v))\n                .map((v) => secretManager.getSecret(`${v}`));\n            await Promise.all(pending)\n                .then((res) => {\n                process.env = { ...process.env, ...res };\n            })\n                .catch((err) => {\n                this.logger.error(\"error loading secret configuration\", err);\n            });\n        }\n    }\n}\n"],"names":["SecretManager","constructor","logger","log4js","getLogger","region","getSecret","secretArn","Promise","resolve","reject","secretsManager","getSecretValue","SecretId","err","data","error","res","SecretString","Buffer","from","SecretBinary","toString","JSON","parse","e","SecretsManager","process","env","AWS_REGION","ConfigLoader","references","production","develop","secrets","API_CONFIGURATION_SECRETS","ENVIRONMENT","secretsLoader","ref","undefined","secretManager","trace","pending","split","filter","v","includes","map","endsWith","substring","length","all","then","catch"],"mappings":"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"}